{"ast":null,"code":"var _jsxFileName = \"/Users/sravan/Desktop/serverSetup/client/src/components/RevenueBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { Tooltip } from 'react-tooltip';\nimport './styles/revenueBarchart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5038';\nconst RevenueBarChart = () => {\n  _s();\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('month'); // 'month' or 'year'\n\n  const fetchMonthlyBalances = useCallback(async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/monthly-balances`);\n      console.log('API Response:', response.data); // Log the API response\n      const sortedData = response.data.sort((a, b) => {\n        return a.year === b.year ? a.month - b.month : a.year - b.year;\n      });\n      setMonthlyData(sortedData);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching monthly balances:', error);\n      setError('Failed to fetch monthly balances');\n      setIsLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchMonthlyBalances();\n  }, [fetchMonthlyBalances]);\n  const aggregateData = (data, mode) => {\n    if (mode === 'month') {\n      const currentDate = new Date();\n      const monthsOfYear = Array.from({\n        length: 12\n      }, (_, i) => {\n        const date = new Date(currentDate.getFullYear(), currentDate.getMonth() - i, 1);\n        return {\n          year: date.getFullYear(),\n          month: date.getMonth() + 1,\n          revenue: 0\n        };\n      }).reverse();\n      console.log('Months of Year:', monthsOfYear);\n      const dataMap = new Map(data.map(item => [`${item.year}-${item.month}`, item]));\n      console.log('Data Map:', dataMap);\n      return monthsOfYear.map(month => {\n        const key = `${month.year}-${month.month}`;\n        const existingData = dataMap.get(key);\n        console.log('Mapping Month:', month, 'with Data:', existingData);\n        return existingData ? {\n          ...month,\n          revenue: existingData.closingBalance - existingData.openingBalance\n        } : month;\n      });\n    } else {\n      // Yearly aggregation logic (unchanged)\n    }\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading chart data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 21\n  }, this);\n  const aggregatedData = aggregateData(monthlyData, viewMode);\n  console.log('Aggregated Data:', aggregatedData); // Log the aggregated data\n\n  // Calculate Q1, Q3, and IQR for outlier detection\n  const sortedRevenues = aggregatedData.map(d => Math.abs(d.revenue)).sort((a, b) => a - b);\n  const q1 = sortedRevenues[Math.floor(sortedRevenues.length / 4)];\n  const q3 = sortedRevenues[Math.floor(3 * sortedRevenues.length / 4)];\n  const iqr = q3 - q1;\n  const upperWhisker = q3 + 1.5 * iqr;\n\n  // Filter out extreme outliers and calculate max revenue\n  const filteredData = aggregatedData.filter(d => Math.abs(d.revenue) <= upperWhisker);\n  const maxRevenue = Math.max(...filteredData.map(d => Math.abs(d.revenue)));\n  console.log('Filtered Data:', filteredData);\n  console.log('Max Revenue:', maxRevenue);\n  const width = 500;\n  const height = 300;\n  const margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 40\n  };\n  const chartWidth = width - margin.left - margin.right;\n  const chartHeight = height - margin.top - margin.bottom;\n  const barWidth = chartWidth / aggregatedData.length - 5; // Adjusted bar width to reduce gap\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"revenue-chart-block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setViewMode('month'),\n        children: \"Monthly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: `translate(${margin.left},${margin.top})`,\n        children: aggregatedData.map((d, i) => {\n          const barHeight = Math.min(Math.abs(d.revenue) / maxRevenue * chartHeight, chartHeight);\n          console.log('Bar Height:', barHeight, 'Revenue:', d.revenue, 'Max Revenue:', maxRevenue);\n          const y = d.revenue >= 0 ? chartHeight - barHeight : chartHeight;\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: i * (barWidth + 1) // Adjusted x position to account for reduced gap\n              ,\n              y: y,\n              width: barWidth - 12 // Adjusted bar width\n              ,\n              height: barHeight,\n              fill: d.revenue >= 0 ? \"#56AEFF\" : \"#ff0000\",\n              rx: 10,\n              ry: 10,\n              \"data-tooltip-id\": \"chart-tooltip\",\n              \"data-tooltip-content\": viewMode === 'month' ? `${d.year}-${d.month.toString().padStart(2, '0')}: $${d.revenue.toFixed(2)}` : `${d.year}: $${d.revenue.toFixed(2)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      id: \"chart-tooltip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(RevenueBarChart, \"lCeYIW7wMmx5iD3KDtzDYiAzh8s=\");\n_c = RevenueBarChart;\nexport default RevenueBarChart;\nvar _c;\n$RefreshReg$(_c, \"RevenueBarChart\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Tooltip","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","RevenueBarChart","_s","monthlyData","setMonthlyData","isLoading","setIsLoading","error","setError","viewMode","setViewMode","fetchMonthlyBalances","response","get","console","log","data","sortedData","sort","a","b","year","month","aggregateData","mode","currentDate","Date","monthsOfYear","Array","from","length","_","i","date","getFullYear","getMonth","revenue","reverse","dataMap","Map","map","item","key","existingData","closingBalance","openingBalance","children","fileName","_jsxFileName","lineNumber","columnNumber","aggregatedData","sortedRevenues","d","Math","abs","q1","floor","q3","iqr","upperWhisker","filteredData","filter","maxRevenue","max","width","height","margin","top","right","bottom","left","chartWidth","chartHeight","barWidth","className","onClick","transform","barHeight","min","y","x","fill","rx","ry","toString","padStart","toFixed","id","_c","$RefreshReg$"],"sources":["/Users/sravan/Desktop/serverSetup/client/src/components/RevenueBarChart.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { Tooltip } from 'react-tooltip';\nimport './styles/revenueBarchart.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5038';\n\nconst RevenueBarChart = () => {\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [viewMode, setViewMode] = useState('month'); // 'month' or 'year'\n\n  const fetchMonthlyBalances = useCallback(async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/monthly-balances`);\n      console.log('API Response:', response.data); // Log the API response\n      const sortedData = response.data.sort((a, b) => {\n        return a.year === b.year ? a.month - b.month : a.year - b.year;\n      });\n      setMonthlyData(sortedData);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching monthly balances:', error);\n      setError('Failed to fetch monthly balances');\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchMonthlyBalances();\n  }, [fetchMonthlyBalances]);\n\n  const aggregateData = (data, mode) => {\n    if (mode === 'month') {\n      const currentDate = new Date();\n      const monthsOfYear = Array.from({ length: 12 }, (_, i) => {\n        const date = new Date(currentDate.getFullYear(), currentDate.getMonth() - i, 1);\n        return {\n          year: date.getFullYear(),\n          month: date.getMonth() + 1,\n          revenue: 0\n        };\n      }).reverse();\n\n      console.log('Months of Year:', monthsOfYear);\n\n      const dataMap = new Map(data.map(item => [`${item.year}-${item.month}`, item]));\n      console.log('Data Map:', dataMap);\n\n      return monthsOfYear.map(month => {\n        const key = `${month.year}-${month.month}`;\n        const existingData = dataMap.get(key);\n        console.log('Mapping Month:', month, 'with Data:', existingData);\n        return existingData\n          ? { \n              ...month, \n              revenue: existingData.closingBalance - existingData.openingBalance,\n            }\n          : month;\n      });\n    } else {\n      // Yearly aggregation logic (unchanged)\n    }\n  };\n\n  if (isLoading) return <div>Loading chart data...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  const aggregatedData = aggregateData(monthlyData, viewMode);\n  console.log('Aggregated Data:', aggregatedData); // Log the aggregated data\n\n  // Calculate Q1, Q3, and IQR for outlier detection\n  const sortedRevenues = aggregatedData.map(d => Math.abs(d.revenue)).sort((a, b) => a - b);\n  const q1 = sortedRevenues[Math.floor(sortedRevenues.length / 4)];\n  const q3 = sortedRevenues[Math.floor(3 * sortedRevenues.length / 4)];\n  const iqr = q3 - q1;\n  const upperWhisker = q3 + 1.5 * iqr;\n\n  // Filter out extreme outliers and calculate max revenue\n  const filteredData = aggregatedData.filter(d => Math.abs(d.revenue) <= upperWhisker);\n  const maxRevenue = Math.max(...filteredData.map(d => Math.abs(d.revenue)));\n\n  console.log('Filtered Data:', filteredData);\n  console.log('Max Revenue:', maxRevenue);\n\n  const width = 500;\n  const height = 300;\n  const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n  const chartWidth = width - margin.left - margin.right;\n  const chartHeight = height - margin.top - margin.bottom;\n\n  const barWidth = chartWidth / aggregatedData.length - 5; // Adjusted bar width to reduce gap\n\n  return (\n    <div className='revenue-chart-block'>\n      <div>\n        <button onClick={() => setViewMode('month')}>Monthly</button>\n        {/* <button onClick={() => setViewMode('year')}>Yearly</button> */}\n      </div>\n      <svg width={width} height={height}>\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          {aggregatedData.map((d, i) => {\n            const barHeight = Math.min(Math.abs(d.revenue) / maxRevenue * chartHeight, chartHeight);\n            console.log('Bar Height:', barHeight, 'Revenue:', d.revenue, 'Max Revenue:', maxRevenue);\n            const y = d.revenue >= 0 ? chartHeight - barHeight : chartHeight;\n            return (\n              <g key={i}>\n                <rect\n                  x={i * (barWidth + 1)} // Adjusted x position to account for reduced gap\n                  y={y}\n                  width={barWidth - 12} // Adjusted bar width\n                  height={barHeight}\n                  fill={d.revenue >= 0 ? \"#56AEFF\" : \"#ff0000\"}\n                  rx={10}\n                  ry={10}\n                  data-tooltip-id=\"chart-tooltip\"\n                  data-tooltip-content={\n                    viewMode === 'month'\n                      ? `${d.year}-${d.month.toString().padStart(2, '0')}: $${d.revenue.toFixed(2)}`\n                      : `${d.year}: $${d.revenue.toFixed(2)}`\n                  }\n                />\n              </g>\n            );\n          })}\n        </g>\n      </svg>\n      <Tooltip id=\"chart-tooltip\" />\n    </div>\n  );\n};\n\nexport default RevenueBarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}