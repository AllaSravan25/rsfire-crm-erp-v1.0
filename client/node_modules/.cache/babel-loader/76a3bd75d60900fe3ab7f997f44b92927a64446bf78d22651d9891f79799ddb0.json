{"ast":null,"code":"var _jsxFileName = \"/Users/sravan/Desktop/serverSetup/client/src/pages/Accounts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Input } from \"../components/ui/input\";\nimport { Button } from \"../components/ui/button\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"../components/ui/Table\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"../components/ui/card\";\nimport { BarChart, Bar, PieChart, Pie, Cell, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Search, Filter } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\nconst Accounts = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [expensesBreakdown, setExpensesBreakdown] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        await Promise.all([fetchTransactions(), fetchMonthlyData(), fetchExpensesBreakdown()]);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to fetch data. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const fetchTransactions = async () => {\n    try {\n      const response = await fetch('http://localhost:5038/transactions');\n      if (!response.ok) throw new Error('Failed to fetch transactions');\n      const data = await response.json();\n      setTransactions(data);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n  const fetchMonthlyData = async () => {\n    try {\n      const response = await fetch('http://localhost:5038/transactions/monthly');\n      if (!response.ok) throw new Error('Failed to fetch monthly data');\n      const data = await response.json();\n      console.log('Monthly data received:', data);\n      setMonthlyData(data);\n    } catch (error) {\n      console.error('Error fetching monthly data:', error);\n    }\n  };\n  const fetchExpensesBreakdown = async () => {\n    try {\n      const response = await fetch('http://localhost:5038/transactions/expenses');\n      if (!response.ok) throw new Error('Failed to fetch expenses breakdown');\n      const data = await response.json();\n      setExpensesBreakdown(data);\n    } catch (error) {\n      console.error('Error fetching expenses breakdown:', error);\n    }\n  };\n  const filteredTransactions = useMemo(() => {\n    return transactions.filter(transaction => Object.values(transaction).some(value => value !== null && value !== undefined && value.toString().toLowerCase().includes(searchTerm.toLowerCase())));\n  }, [searchTerm, transactions]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 21\n  }, this);\n  const calculateTotalRevenue = () => {\n    console.log('Calculating total revenue');\n    console.log('Transactions:', transactions);\n    const total = transactions.filter(t => t.type.toLowerCase() === 'received' || t.type.toLowerCase() === 'recieved').reduce((sum, t) => {\n      console.log(`Adding transaction: ${t.amount}`);\n      return sum + (t.amount || 0);\n    }, 0);\n    console.log('Total revenue:', total);\n    return total;\n  };\n  const calculateTotalSpend = () => {\n    console.log('Calculating total spend');\n    const total = transactions.filter(t => t.type.toLowerCase() === 'sent').reduce((sum, t) => sum + (t.amount || 0), 0);\n    console.log('Total spend:', total);\n    return total;\n  };\n  const calculateAccountBalance = () => {\n    const balance = calculateTotalRevenue() - calculateTotalSpend();\n    console.log('Account balance:', balance);\n    return balance;\n  };\n  const formatCurrency = amount => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR'\n    }).format(amount);\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-IN', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-6\",\n      children: \"Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Revenue every month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl font-bold mt-2\",\n              children: formatCurrency(calculateTotalRevenue())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Total Revenue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 200,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: monthlyData,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                formatter: value => formatCurrency(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"received\",\n                fill: \"#8884d8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Spend every month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 200,\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              data: monthlyData,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                formatter: value => formatCurrency(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"sent\",\n                fill: \"#ffc658\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold mt-2\",\n            children: formatCurrency(calculateTotalSpend())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Total Spend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Expenses breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 200,\n            children: /*#__PURE__*/_jsxDEV(PieChart, {\n              children: [/*#__PURE__*/_jsxDEV(Pie, {\n                data: expensesBreakdown,\n                cx: \"50%\",\n                cy: \"50%\",\n                outerRadius: 80,\n                fill: \"#8884d8\",\n                dataKey: \"value\",\n                label: ({\n                  name,\n                  percent\n                }) => `${name} ${(percent * 100).toFixed(0)}%`,\n                children: expensesBreakdown.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                  fill: COLORS[index % COLORS.length]\n                }, `cell-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                formatter: value => formatCurrency(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold mt-2\",\n            children: formatCurrency(calculateTotalSpend())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Total Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            children: \"Account Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl font-bold\",\n            children: formatCurrency(calculateAccountBalance())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-500 text-lg\",\n            children: [(calculateAccountBalance() / calculateTotalRevenue() * 100).toFixed(2), \"% \\u2191\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: \"Current Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex-grow mr-4\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: \"absolute left-2 top-1/2 transform -translate-y-1/2 text-gray-400\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: \"pl-8\",\n          placeholder: \"Search for transaction\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          size: 20,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), \" Filter\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n            children: \"Subcategory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n            children: \"Recipient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: filteredTransactions.map(transaction => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: transaction.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: transaction.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: transaction.subcategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: transaction.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: transaction.to\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: formatCurrency(transaction.amount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: formatDate(transaction.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, transaction._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Accounts, \"4wE1NR2m/eO6/yX24FGaIz7G2kA=\");\n_c = Accounts;\nexport default Accounts;\nvar _c;\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Input","Button","Table","TableBody","TableCell","TableHead","TableHeader","TableRow","Card","CardContent","CardHeader","CardTitle","BarChart","Bar","PieChart","Pie","Cell","ResponsiveContainer","Tooltip","XAxis","YAxis","Search","Filter","jsxDEV","_jsxDEV","COLORS","Accounts","_s","searchTerm","setSearchTerm","transactions","setTransactions","monthlyData","setMonthlyData","expensesBreakdown","setExpensesBreakdown","isLoading","setIsLoading","error","setError","fetchData","Promise","all","fetchTransactions","fetchMonthlyData","fetchExpensesBreakdown","console","response","fetch","ok","Error","data","json","log","filteredTransactions","filter","transaction","Object","values","some","value","undefined","toString","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateTotalRevenue","total","t","type","reduce","sum","amount","calculateTotalSpend","calculateAccountBalance","balance","formatCurrency","Intl","NumberFormat","style","currency","format","formatDate","dateString","Date","toLocaleDateString","year","month","day","className","width","height","dataKey","formatter","fill","cx","cy","outerRadius","label","name","percent","toFixed","map","entry","index","length","size","placeholder","onChange","e","target","variant","category","subcategory","description","to","date","_id","_c","$RefreshReg$"],"sources":["/Users/sravan/Desktop/serverSetup/client/src/pages/Accounts.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport { Input } from \"../components/ui/input\"\nimport { Button } from \"../components/ui/button\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"../components/ui/Table\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"../components/ui/card\"\nimport { BarChart, Bar, PieChart, Pie, Cell, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\nimport { Search, Filter } from 'lucide-react'\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst Accounts = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [expensesBreakdown, setExpensesBreakdown] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        await Promise.all([\n          fetchTransactions(),\n          fetchMonthlyData(),\n          fetchExpensesBreakdown()\n        ]);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to fetch data. Please try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const fetchTransactions = async () => {\n    try {\n      const response = await fetch('http://localhost:5038/transactions');\n      if (!response.ok) throw new Error('Failed to fetch transactions');\n      const data = await response.json();\n      setTransactions(data);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n\n  const fetchMonthlyData = async () => {\n    try {\n      const response = await fetch('http://localhost:5038/transactions/monthly');\n      if (!response.ok) throw new Error('Failed to fetch monthly data');\n      const data = await response.json();\n      console.log('Monthly data received:', data);\n      setMonthlyData(data);\n    } catch (error) {\n      console.error('Error fetching monthly data:', error);\n    }\n  };\n\n  const fetchExpensesBreakdown = async () => {\n    try {\n      const response = await fetch('http://localhost:5038/transactions/expenses');\n      if (!response.ok) throw new Error('Failed to fetch expenses breakdown');\n      const data = await response.json();\n      setExpensesBreakdown(data);\n    } catch (error) {\n      console.error('Error fetching expenses breakdown:', error);\n    }\n  };\n\n  const filteredTransactions = useMemo(() => {\n    return transactions.filter(transaction =>\n      Object.values(transaction).some(value =>\n        value !== null && value !== undefined && value.toString().toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    );\n  }, [searchTerm, transactions]);\n\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  const calculateTotalRevenue = () => {\n    console.log('Calculating total revenue');\n    console.log('Transactions:', transactions);\n    const total = transactions\n      .filter(t => t.type.toLowerCase() === 'received' || t.type.toLowerCase() === 'recieved')\n      .reduce((sum, t) => {\n        console.log(`Adding transaction: ${t.amount}`);\n        return sum + (t.amount || 0)\n      }, 0);\n    console.log('Total revenue:', total);\n    return total;\n  };\n\n  const calculateTotalSpend = () => {\n    console.log('Calculating total spend');\n    const total = transactions\n      .filter(t => t.type.toLowerCase() === 'sent')\n      .reduce((sum, t) => sum + (t.amount || 0), 0);\n    console.log('Total spend:', total);\n    return total;\n  };\n\n  const calculateAccountBalance = () => {\n    const balance = calculateTotalRevenue() - calculateTotalSpend();\n    console.log('Account balance:', balance);\n    return balance;\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR' }).format(amount);\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-IN', { \n      year: 'numeric', \n      month: 'short', \n      day: 'numeric' \n    });\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-4xl font-bold mb-6\">Accounts</h1>\n\n      <h2 className=\"text-2xl font-semibold mb-4\">Dashboard</h2>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Revenue every month</CardTitle>\n          </CardHeader>\n          <CardContent>\n          <div>\n            <div className=\"text-2xl font-bold mt-2\">{formatCurrency(calculateTotalRevenue())}</div>\n            <div className=\"text-sm text-gray-500\">Total Revenue</div>\n            </div>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <BarChart data={monthlyData}>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip formatter={(value) => formatCurrency(value)} />\n                <Bar dataKey=\"received\" fill=\"#8884d8\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Spend every month</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <BarChart data={monthlyData}>\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip formatter={(value) => formatCurrency(value)} />\n                <Bar dataKey=\"sent\" fill=\"#ffc658\" />\n              </BarChart>\n            </ResponsiveContainer>\n            <div className=\"text-2xl font-bold mt-2\">{formatCurrency(calculateTotalSpend())}</div>\n            <div className=\"text-sm text-gray-500\">Total Spend</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Expenses breakdown</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <PieChart>\n                <Pie\n                  data={expensesBreakdown}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                >\n                  {expensesBreakdown.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip formatter={(value) => formatCurrency(value)} />\n              </PieChart>\n            </ResponsiveContainer>\n            <div className=\"text-2xl font-bold mt-2\">{formatCurrency(calculateTotalSpend())}</div>\n            <div className=\"text-sm text-gray-500\">Total Expenses</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Account Balance</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-4xl font-bold\">{formatCurrency(calculateAccountBalance())}</div>\n            <div className=\"text-green-500 text-lg\">\n              {((calculateAccountBalance() / calculateTotalRevenue()) * 100).toFixed(2)}% ↑\n            </div>\n            <div className=\"text-sm text-gray-500\">Current Balance</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <h2 className=\"text-2xl font-semibold mb-4\">Transactions</h2>\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"relative flex-grow mr-4\">\n          <Search className=\"absolute left-2 top-1/2 transform -translate-y-1/2 text-gray-400\" size={20} />\n          <Input\n            className=\"pl-8\"\n            placeholder=\"Search for transaction\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n        <Button variant=\"outline\">\n          <Filter size={20} className=\"mr-2\" /> Filter\n        </Button>\n      </div>\n\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>Type</TableHead>\n            <TableHead>Category</TableHead>\n            <TableHead>Subcategory</TableHead>\n            <TableHead>Description</TableHead>\n            <TableHead>Recipient</TableHead>\n            <TableHead>Amount</TableHead>\n            <TableHead>Date</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {filteredTransactions.map((transaction) => (\n            <TableRow key={transaction._id}>\n              <TableCell>{transaction.type}</TableCell>\n              <TableCell>{transaction.category}</TableCell>\n              <TableCell>{transaction.subcategory}</TableCell>\n              <TableCell>{transaction.description}</TableCell>\n              <TableCell>{transaction.to}</TableCell>\n              <TableCell>{formatCurrency(transaction.amount)}</TableCell>\n              <TableCell>{formatDate(transaction.date)}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default Accounts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}